{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { GET_CATEGORIES, GET_SUBCATEGORIES, GET_SENTENCES, ADD_CATEGORY, ADD_SUBCATEGORY, ADD_SENTENCE } from \"../constants\";\nvar subID = 0;\nvar sentID = 0;\nvar initialSubCatState = [{\n  id: 0,\n  title: \"subcat1\"\n}];\nvar initialSentenceState = [{\n  id: 0,\n  sentence: \"hello world\"\n}];\nexport var catReducer = function catReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CATEGORY:\n      return [].concat(_toConsumableArray(state), [{\n        id: ++catID,\n        title: action.title\n      }]);\n\n    case GET_CATEGORIES:\n      state = action.categories;\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport var subCatReducer = function subCatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSubCatState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_SUBCATEGORY:\n      return [].concat(_toConsumableArray(state), [{\n        id: ++subID,\n        title: action.title\n      }]);\n\n    case GET_SUBCATEGORIES:\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport var sentenceReducer = function sentenceReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSentenceState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_SENTENCE:\n      return [].concat(_toConsumableArray(state), [{\n        id: ++sentID,\n        sentence: action.sentence\n      }]);\n\n    case GET_SENTENCES:\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/andrewa/React_Projects/winter-2021-codefest-submissions-the-major-switchers/myPal_client/store/myPal_redux/reducer.js"],"names":["GET_CATEGORIES","GET_SUBCATEGORIES","GET_SENTENCES","ADD_CATEGORY","ADD_SUBCATEGORY","ADD_SENTENCE","subID","sentID","initialSubCatState","id","title","initialSentenceState","sentence","catReducer","state","action","type","catID","categories","subCatReducer","sentenceReducer"],"mappings":";AAAA,SACIA,cADJ,EAEIC,iBAFJ,EAGIC,aAHJ,EAIIC,YAJJ,EAIkBC,eAJlB,EAImCC,YAJnC;AAQA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,MAAM,GAAG,CAAb;AAIA,IAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAAD,CAA3B;AACA,IAAMC,oBAAoB,GAAG,CAAC;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASG,EAAAA,QAAQ,EAAE;AAAnB,CAAD,CAA7B;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,YAAL;AACI,0CACOW,KADP,IAEI;AACIL,QAAAA,EAAE,EAAE,EAAEQ,KADV;AAEIP,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAFlB,OAFJ;;AAOJ,SAAKV,cAAL;AACIc,MAAAA,KAAK,GAAGC,MAAM,CAACG,UAAf;AACA,aAAOJ,KAAP;;AACJ;AACI,aAAOA,KAAP;AAbR;AAeH,CAhBM;AAkBP,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAwC;AAAA,MAAvCL,KAAuC,uEAA/BN,kBAA+B;AAAA,MAAXO,MAAW;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,eAAL;AACI,0CACOU,KADP,IAEI;AACIL,QAAAA,EAAE,EAAE,EAAEH,KADV;AAEII,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAFlB,OAFJ;;AAOH,SAAKT,iBAAL;AACG,aAAOa,KAAP;;AACH;AACG,aAAOA,KAAP;AAZR;AAcH,CAfM;AAiBP,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,GAA0C;AAAA,MAAzCN,KAAyC,uEAAjCH,oBAAiC;AAAA,MAAXI,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,YAAL;AACI,0CACOS,KADP,IAEI;AACIL,QAAAA,EAAE,EAAE,EAAEF,MADV;AAEIK,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAFrB,OAFJ;;AAOJ,SAAKV,aAAL;AACI,aAAOY,KAAP;;AACJ;AACI,aAAOA,KAAP;AAZR;AAcH,CAfM","sourcesContent":["import {\n    GET_CATEGORIES,\n    GET_SUBCATEGORIES,\n    GET_SENTENCES,\n    ADD_CATEGORY, ADD_SUBCATEGORY, ADD_SENTENCE\n} from '../constants'\n\n// let catID = 0;\nlet subID = 0;\nlet sentID = 0;\n\n// const initialCatState = [{ id: 0, title: \"cat1\" }]\n\nconst initialSubCatState = [{ id: 0, title: \"subcat1\"}]\nconst initialSentenceState = [{ id: 0, sentence: \"hello world\"}]\nexport const catReducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_CATEGORY:\n            return [\n                ...state,\n                {\n                    id: ++catID,\n                    title: action.title\n                }\n            ]\n        case GET_CATEGORIES:\n            state = action.categories\n            return state\n        default:\n            return state\n    }\n}\n\nexport const subCatReducer = (state = initialSubCatState, action) => {\n    switch (action.type){\n        case ADD_SUBCATEGORY:\n            return [\n                ...state,\n                {\n                    id: ++subID,\n                    title: action.title\n                }\n            ]\n         case GET_SUBCATEGORIES:\n            return state\n         default: \n            return state\n    }\n}\n\nexport const sentenceReducer = (state = initialSentenceState, action) => {\n    switch (action.type){\n        case ADD_SENTENCE:\n            return [\n                ...state,\n                {\n                    id: ++sentID,\n                    sentence: action.sentence\n                }\n            ]\n        case GET_SENTENCES:\n            return state\n        default: \n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}