{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/andrewa/React_Projects/winter-2021-codefest-submissions-the-major-switchers/myPal_client/components/Sentences.js\";\n\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { _addSentence } from \"../store/myPal_redux/actions\";\n\nvar Sentences = function Sentences(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var dispatch = useDispatch();\n  var sentences = useSelector(function (_ref2) {\n    var sentences = _ref2.sentences;\n    return sentences;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      IndSentence = _useState2[0],\n      setIndSentence = _useState2[1];\n\n  var testSentence = function testSentence(newSentence) {\n    if (newSentence != \"\") {\n      dispatch(_addSentence(newSentence));\n      setIndSentence(\"\");\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, sentences.map(function (sentence) {\n    return React.createElement(TouchableOpacity, {\n      key: sentence.id,\n      onPress: function onPress() {\n        return alert(route.params.subcategory);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, sentence.sentence));\n  }), React.createElement(TextInput, {\n    value: IndSentence,\n    placeholder: \"Enter new sentence\",\n    onChangeText: function onChangeText(text) {\n      return setIndSentence(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Submit\",\n    onPress: function onPress() {\n      testSentence(IndSentence);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Sentences;","map":{"version":3,"sources":["/home/andrewa/React_Projects/winter-2021-codefest-submissions-the-major-switchers/myPal_client/components/Sentences.js"],"names":["React","useState","useDispatch","useSelector","_addSentence","Sentences","navigation","route","dispatch","sentences","IndSentence","setIndSentence","testSentence","newSentence","map","sentence","id","alert","params","subcategory","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAvBC,UAAuB,QAAvBA,UAAuB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACnC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACJ,MAAMO,SAAS,GAAGN,WAAW,CAAE;AAAA,QAAEM,SAAF,SAAEA,SAAF;AAAA,WAAiBA,SAAjB;AAAA,GAAF,CAA7B;;AAFuC,kBAGDR,QAAQ,CAAC,EAAD,CAHP;AAAA;AAAA,MAGhCS,WAHgC;AAAA,MAGnBC,cAHmB;;AAIvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAAiB;AAClC,QAAIA,WAAW,IAAI,EAAnB,EAAuB;AACnBL,MAAAA,QAAQ,CAAEJ,YAAY,CAACS,WAAD,CAAd,CAAR;AACAF,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AAEJ,GAND;;AAOA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,CAACK,GAAV,CAAc,UAACC,QAAD;AAAA,WACX,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAhC;AAAoC,MAAA,OAAO,EAAE;AAAA,eAAMC,KAAK,CAACV,KAAK,CAACW,MAAN,CAAaC,WAAd,CAAX;AAAA,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,QAAQ,CAACA,QADd,CADJ,CADW;AAAA,GAAd,CADL,EAWI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEL,WAAlB;AAA+B,IAAA,WAAW,EAAC,oBAA3C;AAAgE,IAAA,YAAY,EAAE,sBAAAU,IAAI;AAAA,aAAIT,cAAc,CAACS,IAAD,CAAlB;AAAA,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,mBAAM;AAAER,MAAAA,YAAY,CAACF,WAAD,CAAZ;AAA2B,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAoBH,CA/BD;;AAgCA,eAAeL,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ScrollView, Button, Text, TouchableOpacity, View, TextInput } from 'react-native';\nimport { useDispatch, useSelector } from \"react-redux\"; \nimport { _addSentence } from \"../store/myPal_redux/actions\";\n\nconst Sentences = ({navigation, route}) => {\n        const dispatch = useDispatch ()\n    const sentences = useSelector (({sentences}) => sentences)\n    const [IndSentence, setIndSentence] = useState(\"\")\n    const testSentence = (newSentence) => {\n        if (newSentence != \"\") {\n            dispatch (_addSentence(newSentence))\n            setIndSentence(\"\")\n        }\n\n    }\n    return (\n        <ScrollView>\n            {sentences.map((sentence) => (\n                <TouchableOpacity key={sentence.id} onPress={() => alert(route.params.subcategory)}>\n                    <Text>\n                        {sentence.sentence}\n                    </Text>\n                </TouchableOpacity>\n            ))}\n            {/* <Text>\n                Test\n            </Text> */}\n            <TextInput value={IndSentence} placeholder=\"Enter new sentence\" onChangeText={text => setIndSentence(text)} />\n            <Button title=\"Submit\" onPress={() => { testSentence(IndSentence) }} />\n\n\n\n\n        </ScrollView>\n    )\n}\nexport default Sentences ;"]},"metadata":{},"sourceType":"module"}